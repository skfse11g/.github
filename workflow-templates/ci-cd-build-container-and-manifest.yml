name: Build a Docker image, Push it to ACR and update manifest
# ENV section is mandatory
env:
  acr_repo: '***.azurecr.io' # use your acr repo
  container_name: 'some_name' # name of the container
  application_name: 'application name' 
  build_context: './path/to/dockerfile' # relative to root of build repo
  manifest_path: './path/to/manifests' # path to manifest inputs in the manifest repo
# only run workflow when a new version is released. The docker image will get
# the version tag and the 'latest' tag
on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout build repo
        uses: actions/checkout@v2

      - name: login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.acr_repo}}
          username: ${{ secrets.SKFSE11GACR_USER }}
          password: ${{ secrets.SKFSE11GACR_PASSWORD }}

      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - name: Build the tagged Docker image
        uses: docker/build-push-action@v2
        with:
         context: ${{env.build_context}}
         push: true
         tags: ${{env.acr_repo}}/${{env.container_name}}:${{steps.vars.outputs.tag}}
            
      #- name: Build the tagged Docker image
      #  run: docker build -f ${{env.build_context}}/Dockerfile -t ${{env.acr_repo}}/${{env.container_name}}:${{steps.vars.outputs.tag}} .
      #- name: Push the tagged Docker image
      #  run: docker push ${{env.acr_repo}}/${{env.container_name}}:${{steps.vars.outputs.tag}}
      #- name: Build the latest Docker image
      #  run: docker build -f ${{env.build_context}}/Dockerfile  -t ${{env.acr_repo}}/${{env.container_name}}:latest .
      #- name: Push the latest Docker image
      #  run: docker push ${{env.acr_repo}}/${{env.container_name}}:latest
      
      - uses: actions/checkout@v2
        name: Checkout Manifests 
        with:
          repository: ${{github.repository_owner}}/${{secrets.MANIFESTS}}
          token: ${{secrets.PAT}}
      - name: update manifest
        run: |
          #echo ${{steps.vars.outputs.tag}} > version.txt
          #echo ${{env.container_name}} > container.txt
          #echo ${{env.acr_repo}} > registry.txt
        working-directory: ${{env.manifest_path}}
      - name: Commit changes
        run: |
          git config --global user.name 'skfse11g'
          git add .
          git commit -am "Updates to ${{steps.vars.outputs.tag}}"
          git push
