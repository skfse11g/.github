name: Build a Docker image, Push it to ACR and update manifest
# ENV section is mandatory
env:
  acr_repo: "***.azurecr.io" # use your acr repo
  container_name: "some-name" # name of the container
  var_file_name: "some.name.libsonnet"
  build_context: "./path/to/dockerfile" # relative to root of build repo
  manifest_path: "./path/to/manifests" # path to manifest inputs in the manifest repo
# only run workflow when a new version is released. The docker image will get
# the version tag and the 'latest' tag
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout build repo
        uses: actions/checkout@v2

      - name: login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.acr_repo}}
          username: ${{ secrets.SKFSE11GACR_USER }}
          password: ${{ secrets.SKFSE11GACR_PASSWORD }}
      # Get the hash of the commit
      - name: get hash
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build the tagged Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{env.build_context}}/Dockerfile
          push: true
          tags: ${{env.acr_repo}}/${{env.container_name}}:${{ steps.vars.outputs.sha_short }}

      - uses: actions/checkout@v2
        name: Checkout Manifests
        with:
          repository: ${{github.repository_owner}}/${{secrets.MANIFESTS}}
          token: ${{secrets.PAT}}

      - name: update manifest
        run: |
          mkdir -p ${{env.manifest_path}}
          echo "{tag: '${{ steps.vars.outputs.sha_short }}', containerName: '${{env.container_name}}', repository: '${{env.acr_repo}}' }" > ${{env.manifest_path}}/${{env.var_file_name}}
          #echo -n ${{steps.vars.outputs.tag}} > ${{env.manifest_path}}/version.txt
          #echo -n ${{env.container_name}} > ${{env.manifest_path}}container.txt
          #echo -n ${{env.acr_repo}} > ${{env.manifest_path}}registry.txt
        working-directory: .
      - name: Commit changes
        run: |
          git config --global user.name 'skfse11g'
          git add .
          git commit -am "Updates to ${{ steps.vars.outputs.sha_short }}"
          git push
